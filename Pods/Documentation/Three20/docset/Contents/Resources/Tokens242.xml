<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Categories/NSArray+TTCategory.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cat/NSArray(TTCategory)</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>NSArrayAdditions.h</DeclaredIn>
			
			<NodeRef refid="242"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSArray(TTCategory)/perform:</TokenIdentifier>
			<Abstract type="html">Calls performSelector on all objects that can receive the selector in the array.
Makes an iterable copy of the array, making it possible for the selector to modify
the array. Contrast this with makeObjectsPerformSelector which does not allow side effects of
modifying the array.</Abstract>
			<DeclaredIn>NSArrayAdditions.h</DeclaredIn>			
			
			<Declaration>- (void)perform:(SEL)selector</Declaration>
			
			
			<Anchor>//api/name/perform:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSArray(TTCategory)/perform:withObject:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>NSArrayAdditions.h</DeclaredIn>			
			
			<Declaration>- (void)perform:(SEL)selector withObject:(id)p1</Declaration>
			
			
			<Anchor>//api/name/perform:withObject:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSArray(TTCategory)/perform:withObject:withObject:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>NSArrayAdditions.h</DeclaredIn>			
			
			<Declaration>- (void)perform:(SEL)selector withObject:(id)p1 withObject:(id)p2</Declaration>
			
			
			<Anchor>//api/name/perform:withObject:withObject:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSArray(TTCategory)/perform:withObject:withObject:withObject:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>NSArrayAdditions.h</DeclaredIn>			
			
			<Declaration>- (void)perform:(SEL)selector withObject:(id)p1 withObject:(id)p2 withObject:(id)p3</Declaration>
			
			
			<Anchor>//api/name/perform:withObject:withObject:withObject:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSArray(TTCategory)/makeObjectsPerformSelector:withObject:withObject:</TokenIdentifier>
			<Abstract type="html">Extensions to makeObjectsPerformSelector to provide support for more than one object
parameter.</Abstract>
			<DeclaredIn>NSArrayAdditions.h</DeclaredIn>			
			
			<Declaration>- (void)makeObjectsPerformSelector:(SEL)selector withObject:(id)p1 withObject:(id)p2</Declaration>
			
			
			<Anchor>//api/name/makeObjectsPerformSelector:withObject:withObject:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSArray(TTCategory)/makeObjectsPerformSelector:withObject:withObject:withObject:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>NSArrayAdditions.h</DeclaredIn>			
			
			<Declaration>- (void)makeObjectsPerformSelector:(SEL)selector withObject:(id)p1 withObject:(id)p2 withObject:(id)p3</Declaration>
			
			
			<Anchor>//api/name/makeObjectsPerformSelector:withObject:withObject:withObject:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSArray(TTCategory)/objectWithValue:forKey:</TokenIdentifier>
			<Abstract type="html">nil or an object that matches value with isEqual:</Abstract>
			<DeclaredIn>NSArrayAdditions.h</DeclaredIn>			
			
			<Declaration>- (id)objectWithValue:(id)value forKey:(id)key</Declaration>
			
			<ReturnValue><Abstract type="html">nil or an object that matches value with isEqual:</Abstract></ReturnValue>
			<Anchor>//api/name/objectWithValue:forKey:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSArray(TTCategory)/objectWithClass:</TokenIdentifier>
			<Abstract type="html">the first object with the given class.</Abstract>
			<DeclaredIn>NSArrayAdditions.h</DeclaredIn>			
			
			<Declaration>- (id)objectWithClass:(Class)cls</Declaration>
			
			<ReturnValue><Abstract type="html">the first object with the given class.</Abstract></ReturnValue>
			<Anchor>//api/name/objectWithClass:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/NSArray(TTCategory)/containsObject:withSelector:</TokenIdentifier>
			<Abstract type="html">Required format: - (NSNumber*)method:(id)object;</Abstract>
			<DeclaredIn>NSArrayAdditions.h</DeclaredIn>			
			
			<Declaration>- (BOOL)containsObject:(id)object withSelector:(SEL)selector</Declaration>
			<Parameters>
				<Parameter>
					<Name>selector</Name>
					<Abstract type="html">Required format: - (NSNumber*)method:(id)object;</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/containsObject:withSelector:</Anchor>
		</Token>
		
	</File>
</Tokens>